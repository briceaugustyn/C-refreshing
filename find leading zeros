/*
Write a C program to input any number from user and find total number of leading zeros of the given number.
How to find total leading zeros of a given number (in binary representation) using bitwise operator in C programming.
Logic to count total leading zeros of a given number using C programming.
*/


#include <stdio.h>
#define INT_SIZE sizeof(int) * 8 /* Integer size in bits */

int main()
{
    int num,num2, order, i, msb, count;

    /* Input number from user */
    printf("Enter any number: ");
    scanf("%d", &num);

    /* Initially set the order to max size of integer */
    order = INT_SIZE - 1;

         // Equivalent to
    // 10000000 00000000 00000000 00000000
    msb = 1 << (INT_SIZE - 1);
        
           count = 0;

    /* Iterate over each bit */
    for(i=0; i<INT_SIZE; i++)
    {
        /* If leading set bit is found */
        if((num << i) & msb)
        // 10000000 00000000 00000000 00000000 msb 
        // 00000000 00000000 00000000 00000001 num <-(in decimal 1, is going to shifted the right)
        //&0 count ++ compare the 1 and 0
        //&00 count ++
        //etc.. until we find a 1
        {
            /* Terminate the loop */
            break;
        }

        count++;
    }
    printf("Total number of trailing zeros in %d is %d.", num, count);
    
    
    /* Input number2 from user */
    printf("Enter any new number: \n");
    scanf("%d", &num2);
    
    printf("number %d shited to right is %d.", num2, num2>>1);
    return 0;
}
